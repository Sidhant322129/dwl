------ATTACHBINDINGS-----
console.log("JS file is loaded!");

// Bind event listeners after DOM is fully loaded
window.onload = function () {
  document.getElementById('our_form').addEventListener("submit", onFormSubmit);
  document.getElementById("alert").addEventListener("click", formAlert);
  document.getElementById("button-1").addEventListener("click", toggleBox);
  document.getElementById("button-2").addEventListener("click", rotateColors);

  // Add click listeners for all style tag buttons
  Array.prototype.forEach.call(document.getElementsByClassName("tags-button"), function (el) {
    el.addEventListener("click", onTagButtonClick);
  });

  document.getElementById("canvas").addEventListener("click", drawBox);
  document.getElementById("clearCanvas").addEventListener("click", initCanvas);

  initCanvas();
};
-----------
---html-
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Lab 1</title>
  <style>
    #box {
      width: 50%;
      height: 75px;
      margin: 1em auto;
      padding: 1.5em;
      font: 1.5em Verdana, Helvetica, sans-serif bold;
      text-align: center;
    }
    .section {
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="section">
    <form id="our_form">
      <input type="text" name="foo">
      <input type="text" name="bar">
      <button type="submit">Click Me</button>
      <button type="button" id="alert">Or Click Me!</button>
    </form>
    <div>
      <span>Response: </span>
      <span id="response"></span>
    </div>
  </div>

  <hr>

  <div class="section">
    <button id="button-1">Button 1</button>
    <button id="button-2">Button 2</button>
    <div id="box" style="background-color: red">
      <span>I am a box!</span>
    </div>
  </div>

  <hr>

  <div class="section">
    <button class="tags-button" id="bold-btn">&lt;b&gt; tags</button>
    <button class="tags-button" id="italic-btn">&lt;i&gt; tags</button>
    <button class="tags-button" id="underline-btn">&lt;u&gt; tags</button>
    <div id="tags">
      <b>This is inside a bold tag</b>, <u>and</u> <i>this is not</i>,
      but <b><i>this</i></b> is inside <i>two tags <u>at once</u></i>!
    </div>
  </div>

  <hr>

  <div class="section">
    <canvas width="600" height="300" id="canvas"></canvas><br>
    <button id="clearCanvas">Clear Canvas</button>
  </div>

  <!-- Link JS files correctly -->
  <script src="handlers.js"></script>
  <script src="attachBindings.js"></script>
</body>
</html>
---------------
handelers+++++++
// Toggles the style with name styleName on the tag, with either the value or
// the default value.
function toggleStyle(el, styleName, value) {
  if (el[styleName]) {
    el[styleName] = '';
  } else {
    el[styleName] = value;
  }
}

function onFormSubmit(e) {
  e.preventDefault();
  const form = e.target;
  const first = document.getElementsByName("foo")[0].value;
  const second = document.getElementsByName("bar")[0].value;
  document.getElementById("response").textContent = first + " " + second;
}

function formAlert(e) {
  const first = document.getElementsByName("foo")[0].value;
  const second = document.getElementsByName("bar")[0].value;
  alert("foo: " + first + ", bar: " + second);
}

function toggleBox(e) {
  const box = document.getElementById("box");
  toggleStyle(box.style, 'display', 'none');
}

function rotateColors(e) {
  const box = document.getElementById("box");
  if (box.style.backgroundColor === 'red') {
    box.style.backgroundColor = 'blue';
  } else if (box.style.backgroundColor === 'blue') {
    box.style.backgroundColor = 'green';
  } else {
    box.style.backgroundColor = 'red';
  }
}

function onTagButtonClick(event) {
  const element = event.target;
  const children = document.getElementById("tags").children;

  if (element.id === 'bold-btn') {
    for (const child of children) {
      if (child.localName === 'b') {
        toggleStyle(child.style, 'color', 'red');
      }
    }
  } else if (element.id === 'italic-btn') {
    for (const child of children) {
      if (child.localName === 'i') {
        toggleStyle(child.style, 'backgroundColor', 'gray');
      }
    }
  } else if (element.id === 'underline-btn') {
    for (const child of children) {
      if (child.localName === 'u') {
        toggleStyle(child.style, 'border', '1px solid blue');
      }
    }
  }
}

function initCanvas() {
  const c = document.getElementById("canvas");
  const ctx = c.getContext("2d");
  ctx.fillStyle = '#ddd';
  ctx.clearRect(0, 0, 600, 300);
  ctx.fillRect(0, 0, 600, 300);
}

function randomColor() {
  const r = (Math.random() * 256 | 0).toString(16).padStart(2, '0');
  const g = (Math.random() * 256 | 0).toString(16).padStart(2, '0');
  const b = (Math.random() * 256 | 0).toString(16).padStart(2, '0');
  return "#" + r + g + b;
}

function drawBox(e) {
  const c = document.getElementById("canvas");
  const ctx = c.getContext("2d");

  const rect = c.getBoundingClientRect();
  const mouseX = e.clientX - rect.left;
  const mouseY = e.clientY - rect.top;

  const width = Math.floor(Math.random() * 150) + 50;
  const height = Math.floor(Math.random() * 50) + 50;

  ctx.fillStyle = randomColor();
  ctx.fillRect(mouseX - width / 2, mouseY - height / 2, width, height);
}

